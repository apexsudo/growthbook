on:
  push:

permissions:
  checks: write
  pull-requests: write
  issues: write
  statuses: write
  contents: write
  actions: write
  deployments: write
  packages: write
  attestations: write

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: setup golang
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - run: go mod download
      - run: go mod vendor
      - run: go test -tags=integration ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./...
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: cover.out
      - uses: vladopajic/go-test-coverage@v2
        with:
          config: ./.testcoverage.yml
  release:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: setup golang
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - run: go mod download
      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 24.2.3
          extra_plugins: |
            @semantic-release/git@10.0.1
            @semantic-release/exec@7.0.3
            @semantic-release/changelog@6.0.3

  code_coverage:
    name: "Code coverage report"
    if: github.event_name == 'pull_request' # Do not run when workflow is triggered by push to main branch
    runs-on: ubuntu-latest
    needs: test # Depends on the artifact uploaded by the "unit_tests" job
    permissions:
      contents: read
      actions: read  # to download code coverage results from "test" job
      pull-requests: write # write permission needed to comment on PR
    steps:
      - uses: fgrosse/go-coverage-report@v1.1.1 # Consider using a Git revision for maximum security
        with:
          coverage-artifact-name: "code-coverage" # can be omitted if you used this default value
          coverage-file-name: "cover.out"
